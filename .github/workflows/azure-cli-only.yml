name: Azure CLI Only Deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  RESOURCE_GROUP: rg-${{ vars.AZURE_ENV_NAME }}
  LOCATION: eastus

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - uses: actions/checkout@v3

      - name: Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: Build backend image
        run: |
          # Build backend image
          docker build -t tasktracker-backend ./backend

      - name: Build frontend image
        run: |
          # Build frontend image
          docker build -t tasktracker-frontend ./frontend

      - name: Deploy Bicep infrastructure
        id: deploy-bicep
        run: |
          # Deploy infrastructure
          DEPLOYMENT_NAME="deployment-${{ github.run_number }}"
          
          az deployment sub create \
            --name $DEPLOYMENT_NAME \
            --location ${{ env.LOCATION }} \
            --template-file infra/main.bicep \
            --parameters \
              location=${{ env.LOCATION }} \
              resourceGroupName=${{ env.RESOURCE_GROUP }}
          
          # Wait for deployment to complete
          echo "Waiting for deployment to complete..."
          az deployment sub wait \
            --created \
            --name $DEPLOYMENT_NAME
          
          # Get deployment outputs
          DEPLOYMENT_OUTPUT=$(az deployment sub show \
            --name $DEPLOYMENT_NAME \
            --query properties.outputs -o json)
          
          # Extract values from deployment output
          ACR_ENDPOINT=$(echo $DEPLOYMENT_OUTPUT | jq -r .AZURE_CONTAINER_REGISTRY_ENDPOINT.value)
          echo "ACR_NAME=$(echo $ACR_ENDPOINT | cut -d'.' -f1)" >> $GITHUB_ENV
          
          # Store container app IDs for later use
          BACKEND_APP_ID=$(echo $DEPLOYMENT_OUTPUT | jq -r .containerAppBackendId.value)
          FRONTEND_APP_ID=$(echo $DEPLOYMENT_OUTPUT | jq -r .containerAppFrontendId.value)
          echo "BACKEND_APP_ID=$BACKEND_APP_ID" >> $GITHUB_ENV
          echo "FRONTEND_APP_ID=$FRONTEND_APP_ID" >> $GITHUB_ENV
    
      - name: Log in to Azure Container Registry
        run: |
          # Log in to ACR
          az acr login --name ${{ env.ACR_NAME }}
    
      - name: Push backend image
        run: |
            # Tag and push backend image
            docker tag tasktracker-backend ${{ env.ACR_NAME }}.azurecr.io/backend:${{ github.sha }}
            docker push ${{ env.ACR_NAME }}.azurecr.io/backend:${{ github.sha }}
            

      - name: Push frontend image
        run: |
            # Tag and push frontend image
            docker tag tasktracker-frontend ${{ env.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }}
            docker push ${{ env.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }}

      - name: Update container apps
        run: |
          # Update backend using resource ID
          az containerapp update \
            --ids ${{ env.BACKEND_APP_ID }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/backend:${{ github.sha }}

          # Update frontend using resource ID
          az containerapp update \
            --ids ${{ env.FRONTEND_APP_ID }} \
            --image ${{ env.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }}

      - name: Get deployment URLs
        run: |
          BACKEND_URL=$(az containerapp show \
            --ids ${{ env.BACKEND_APP_ID }} \
            --query "properties.configuration.ingress.fqdn" -o tsv)
          FRONTEND_URL=$(az containerapp show \
            --ids ${{ env.FRONTEND_APP_ID }} \
            --query "properties.configuration.ingress.fqdn" -o tsv)
          
          echo "Application URLs:"
          echo "Backend API: https://$BACKEND_URL"
          echo "Frontend App: https://$FRONTEND_URL"
