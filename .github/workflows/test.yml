name: Test get workflow log

on:
  push:
    branches: [ wc/ppl-test, main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - uses: actions/checkout@v3

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.acr_name }}.azurecr.io/tasktracker-backend:${{ github.sha }}
          file: ./backend/Dockerfile

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.acr_name }}.azurecr.io/tasktracker-frontend:${{ github.sha }}
          file: ./frontend/Dockerfile.prod
  create-issue-if-job-fails:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: failure()

    steps:
      - name: Get failed job log
        id: get-workflow-log
        run:
          workflow_log=$(gh run view ${{ github.run_id }} --log-failed)
          echo "workflow_log=$workflow_log" >> $GITHUB_ENV
          
      - name: Create issue
        uses: actions/github-script@v6
        with:
          script: |
            const issueTitle = `Run "${{ github.run_id }}" of workflow "${{ github.workflow }} failed"`;
            const issueBody = `Workflow failed log:\n${{ env.workflow_log }}`;
            const response = await github.issues.create({
              ...context.repo,
              title: issueTitle,
              body: issueBody,
              assignees: ['wchigit']
            });
            console.log(`Issue created with ID: ${response.data.id}`);
