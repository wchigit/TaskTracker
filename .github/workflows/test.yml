name: Test get workflow log

on:
  push:
    branches: [ wc/ppl-test, main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - uses: actions/checkout@v3

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.acr_name }}.azurecr.io/tasktracker-backend:${{ github.sha }}
          file: ./backend/Dockerfile

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.acr_name }}.azurecr.io/tasktracker-frontend:${{ github.sha }}
          file: ./frontend/Dockerfile.prod
  create-issue-if-job-fails:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    env:
      GITHUB_TOKEN: ${{ github.token }}
    if: failure()

    steps:
      - uses: actions/checkout@v3

      - name: Get failed job id and get log
        id: get-log
        run: |
          # Get the job ID of the failed job
          jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs)
          job_id=$(echo $jobs | jq -r '.jobs[] | select(.name=="build-and-deploy") | .id')

          # Get the logs of the failed job
          workflow_log =$(gh run view --job $job_id --log-failed)
          echo "workflow_log=$workflow_log" >> $GITHUB_ENV
          
      - name: Create issue for failed job with logs
        run: |
          # Create an issue with the logs of the failed job
          gh issue create --title "Workflow ${{ github.workflow }} failed at run ${{ github.run_id }}" --body "The workflow failed. Here are the logs:\n${{ env.workflow_log }}" --assignee wchigit
  
